using UnityEngine;

#if UNITY_EDITOR
using UnityEditor;
#endif

namespace NPTP.InputSystemWrapper.Data.Referenceable
{
    // TODO: Move to other project
    public abstract class ReferenceableScriptable<T> : ScriptableObject where T : ScriptableObject
    {
        [SerializeField] private string referenceContainerGuid;
        public string ReferenceContainerGuid => referenceContainerGuid;

        private string TopFolder => "AutoGenerated";
        private string TypeSubFolder => $"{typeof(T).Name}";
        private string PathToContainerInsideResourcesFolder => $"{TopFolder}/{TypeSubFolder}/{referenceContainerGuid}.asset";

#if UNITY_EDITOR
        private void OnValidate()
        {
            var containerAsset = AssetDatabase.LoadAssetAtPath<ScriptableReferenceContainer>($"Assets/Resources/{PathToContainerInsideResourcesFolder}");
            if (containerAsset != null)
            {
                return;
            }
            
            if (!AssetDatabase.TryGetGUIDAndLocalFileIdentifier(this, out string guid, out long _))
            {
                return;
            }
            
            referenceContainerGuid = guid;
            ScriptableReferenceContainer container = CreateInstance<ScriptableReferenceContainer>();

            if (!AssetDatabase.IsValidFolder("Assets/Resources"))
                AssetDatabase.CreateFolder("Assets", "Resources");

            if (!AssetDatabase.IsValidFolder($"Assets/Resources/{TopFolder}"))
                AssetDatabase.CreateFolder("Assets/Resources", TopFolder);
            
            if (!AssetDatabase.IsValidFolder($"Assets/Resources/{TopFolder}/{TypeSubFolder}"))
                AssetDatabase.CreateFolder($"Assets/Resources/{TopFolder}", TypeSubFolder);
            
            string savePath = $"Assets/Resources/{PathToContainerInsideResourcesFolder}";
            Debug.Log($"Creating new {nameof(ScriptableReferenceContainer)} at {savePath}.", container);
            container.EDITOR_SetScriptableObjectReference(this);
            AssetDatabase.CreateAsset(container, savePath);
            AssetDatabase.SaveAssets();
        }
#endif
    }
}