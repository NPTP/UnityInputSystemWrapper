using System.Collections.Generic;
using NPTP.InputSystemWrapper.Generated.MapActions;
using UnityEngine.InputSystem;


// ------------------------------------------------------------------------
// This file was automatically generated by InputScriptGenerator.
// ------------------------------------------------------------------------
namespace NPTP.InputSystemWrapper.Generated.MapCaches
{
    public class PlayerMapCache
    {
        private readonly List<IPlayerActions> interfaces = new();

        public InputActionMap ActionMap { get; }
        public void Enable() => ActionMap.Enable();
        public void Disable() => ActionMap.Disable();

        public InputAction Move { get; }
        public InputAction Look { get; }
        public InputAction Fire { get; }

        public PlayerMapCache(InputActionAsset asset)
        {
            ActionMap = asset.FindActionMap("Player", throwIfNotFound: true);
            
            Move = ActionMap.FindAction("Move", throwIfNotFound: true);
            Look = ActionMap.FindAction("Look", throwIfNotFound: true);
            Fire = ActionMap.FindAction("Fire", throwIfNotFound: true);
        }

        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || interfaces.Contains(instance))
            {
                return;
            }
            
            interfaces.Add(instance);
            
            Move.started += instance.OnMove;
            Move.performed += instance.OnMove;
            Move.canceled += instance.OnMove;
            Look.started += instance.OnLook;
            Look.performed += instance.OnLook;
            Look.canceled += instance.OnLook;
            Fire.started += instance.OnFire;
            Fire.performed += instance.OnFire;
            Fire.canceled += instance.OnFire;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (!interfaces.Remove(instance))
            {
                return;
            }

            Move.started -= instance.OnMove;
            Move.performed -= instance.OnMove;
            Move.canceled -= instance.OnMove;
            Look.started -= instance.OnLook;
            Look.performed -= instance.OnLook;
            Look.canceled -= instance.OnLook;
            Fire.started -= instance.OnFire;
            Fire.performed -= instance.OnFire;
            Fire.canceled -= instance.OnFire;
        }
    }
}
