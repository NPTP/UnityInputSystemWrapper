using System;
using UnityEngine.InputSystem;

// ------------------------------------------------------------------------
// This file was automatically generated by InputScriptGenerator.
// ------------------------------------------------------------------------
namespace NPTP.InputSystemWrapper.Generated.MapActions
{
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
    }
    
    public class PlayerActions : IPlayerActions
    {
        private event Action<InputAction.CallbackContext> @_OnMove;
        public event Action<InputAction.CallbackContext> @OnMove
        {
            add { _OnMove -= value; _OnMove += value; }
            remove => _OnMove -= value;
        }

        private event Action<InputAction.CallbackContext> @_OnLook;
        public event Action<InputAction.CallbackContext> @OnLook
        {
            add { _OnLook -= value; _OnLook += value; }
            remove => _OnLook -= value;
        }

        private event Action<InputAction.CallbackContext> @_OnFire;
        public event Action<InputAction.CallbackContext> @OnFire
        {
            add { _OnFire -= value; _OnFire += value; }
            remove => _OnFire -= value;
        }

        void IPlayerActions.OnMove(InputAction.CallbackContext context) => _OnMove?.Invoke(context);
        void IPlayerActions.OnLook(InputAction.CallbackContext context) => _OnLook?.Invoke(context);
        void IPlayerActions.OnFire(InputAction.CallbackContext context) => _OnFire?.Invoke(context);
    }
}
