using System;
using UnityEngine.InputSystem;

// ------------------------------------------------------------------------
// This file was automatically generated by InputScriptGenerator.
// ------------------------------------------------------------------------
namespace NPTP.InputSystemWrapper.Generated.MapActions
{
    public interface IPauseMenuActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnUnpause(InputAction.CallbackContext context);
    }
    
    public class PauseMenuActions : IPauseMenuActions
    {
        private event Action<InputAction.CallbackContext> @_OnNavigate;
        public event Action<InputAction.CallbackContext> @OnNavigate
        {
            add { _OnNavigate -= value; _OnNavigate += value; }
            remove => _OnNavigate -= value;
        }

        private event Action<InputAction.CallbackContext> @_OnSubmit;
        public event Action<InputAction.CallbackContext> @OnSubmit
        {
            add { _OnSubmit -= value; _OnSubmit += value; }
            remove => _OnSubmit -= value;
        }

        private event Action<InputAction.CallbackContext> @_OnUnpause;
        public event Action<InputAction.CallbackContext> @OnUnpause
        {
            add { _OnUnpause -= value; _OnUnpause += value; }
            remove => _OnUnpause -= value;
        }

        void IPauseMenuActions.OnNavigate(InputAction.CallbackContext context) => _OnNavigate?.Invoke(context);
        void IPauseMenuActions.OnSubmit(InputAction.CallbackContext context) => _OnSubmit?.Invoke(context);
        void IPauseMenuActions.OnUnpause(InputAction.CallbackContext context) => _OnUnpause?.Invoke(context);
    }
}
